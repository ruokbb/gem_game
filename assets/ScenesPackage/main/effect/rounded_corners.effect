CCEffect %{
  name: rounded_corners
  techniques:
    - name: tech
      passes:
        - vert: vs:vert
          frag: fs:frag
          properties:
            mainTexture: { value: white }
            corner_radius: { value: 0.2, editor: { displayName: "Corner Radius", type: number, range: [0, 1] } }
}%

CCProgram vs %{

  precision highp float;
  #include <cc-global>

  in vec4 a_position;
  in vec2 a_uv0;

  out vec2 v_uv0;

  vec4 vert() {
    vec4 pos = cc_matViewProj * a_position;
    v_uv0 = a_uv0;
    return pos;
  }
}%

CCProgram fs %{

  precision highp float;
  #include <cc-global>

  in Texture2D mainTexture;
  in vec2 v_uv0;

  uniform Constant {
    float corner_radius;
  } s;

  vec4 frag() {
    vec2 uv = v_uv0;
    float dist = min(min(uv.x, uv.y), min(1.0 - uv.x, 1.0 - uv.y)); // 计算相对于四个角的距离
    float mask = smoothstep(0.0, s.corner_radius, dist); // 进行差值处理以生成平滑的圆角
    vec4 originColor = texture(mainTexture, v_uv0);
    originColor.a *= mask;

    return originColor;
  }
}%